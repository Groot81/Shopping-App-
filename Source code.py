# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q0YrFPV75MAL-uDSMcSIH-Ncvx5pECVY
"""

# Sample User & Admin Data
users = {"user1": "password123", "user2": "pass456"}
admin = {"admin": "adminpass"}

# Categories (ID â†’ Name)
categories = {1: "Footwear", 2: "Clothing", 3: "Electronics"}

# Product List (Product ID, Name, Category ID, Price)
products = [
    {"id": 101, "name": "Sneakers", "category": 1, "price": 1200},
    {"id": 102, "name": "T-Shirt", "category": 2, "price": 500},
    {"id": 103, "name": "Smartphone", "category": 3, "price": 15000},
]

# Shopping Carts (User-based)
carts = {}

#user login
def login_user():
    username = input("Enter username: ")
    password = input("Enter password: ")

    if username in users and users[username] == password:
        print(f"Welcome, {username}! You are logged in.")
        return username  # Return logged-in user
    else:
        print("Invalid credentials! Try again.")
        return None

#admin login
def login_admin():
    username = input("Enter admin username: ")
    password = input("Enter admin password: ")

    if username in admin and admin[username] == password:
        print(f"Admin {username} logged in successfully.")
        return username  # Return admin session
    else:
        print("Invalid admin credentials!")
        return None

#view catalog
def view_catalog():
    print("\nProduct Catalog:")
    print("-" * 30)
    for product in products:
        category_name = categories.get(product["category"], "Unknown")
        print(f"ID: {product['id']} | Name: {product['name']} | Category: {category_name} | Price: Rs.{product['price']}")
    print("-" * 30)

#User Cart Operations
def add_to_cart(username):
    view_catalog()
    prod_id = int(input("Enter Product ID to add to cart: "))
    quantity = int(input("Enter quantity: "))

    # Find product
    product = next((p for p in products if p["id"] == prod_id), None)

    if product:
        if username not in carts:
            carts[username] = []  # Create a cart if not exists

        carts[username].append({"id": prod_id, "name": product["name"], "price": product["price"], "quantity": quantity})
        print(f"{product['name']} added to cart successfully!")
    else:
        print("Invalid Product ID!")

#view cart
def view_cart(username):
    if username not in carts or not carts[username]:
        print("Your cart is empty!")
        return

    print("\nYour Cart:")
    print("-" * 30)
    total_price = 0
    for item in carts[username]:
        print(f"Name: {item['name']} | Price: Rs.{item['price']} | Quantity: {item['quantity']}")
        total_price += item["price"] * item["quantity"]
    print(f"Total: Rs.{total_price}")
    print("-" * 30)

#remove from cart
def remove_from_cart(username):
    if username not in carts or not carts[username]:
        print("Your cart is empty!")
        return

    view_cart(username)
    prod_id = int(input("Enter Product ID to remove: "))

    # Remove the item
    carts[username] = [item for item in carts[username] if item["id"] != prod_id]

    print("Item removed successfully!")

#payment and checkout
def checkout(username):
    if username not in carts or not carts[username]:
        print("Your cart is empty! Add items before checkout.")
        return

    view_cart(username)
    print("\nPayment Options: 1. Net Banking  2. PayPal  3. UPI  4. Debit Card")
    option = int(input("Choose payment method (1-4): "))

    payment_methods = {1: "Net Banking", 2: "PayPal", 3: "UPI", 4: "Debit Card"}
    method = payment_methods.get(option, "Invalid")

    if method != "Invalid":
        print(f"Your order is successfully placed using {method}!")
        carts[username] = []  # Empty cart after purchase
    else:
        print("Invalid payment option!")

#Admin Product Management
def admin_add_product():
    name = input("Enter product name: ")
    category = int(input("Enter category ID: "))
    price = int(input("Enter price: "))
    product_id = max(p["id"] for p in products) + 1  # Generate new ID

    products.append({"id": product_id, "name": name, "category": category, "price": price})
    print(f"Product '{name}' added successfully!")

#update product
def admin_update_product():
    view_catalog()
    prod_id = int(input("Enter Product ID to update: "))
    product = next((p for p in products if p["id"] == prod_id), None)

    if product:
        product["name"] = input("Enter new name: ") or product["name"]
        product["price"] = int(input("Enter new price: ") or product["price"])
        print("Product updated successfully!")
    else:
        print("Invalid Product ID!")

#delete product
def admin_delete_product():
    view_catalog()
    prod_id = int(input("Enter Product ID to delete: "))
    global products
    products = [p for p in products if p["id"] != prod_id]
    print("Product deleted successfully!")

#run the program
def main():
    print("Welcome to the Demo Marketplace")

    role = input("Are you a User or Admin? ").strip().lower()

    if role == "user":
        user = login_user()
        if user:
            while True:
                print("\n1. View Catalog\n2. Add to Cart\n3. View Cart\n4. Remove from Cart\n5. Checkout\n6. Exit")
                choice = int(input("Enter choice: "))

                if choice == 1:
                    view_catalog()
                elif choice == 2:
                    add_to_cart(user)
                elif choice == 3:
                    view_cart(user)
                elif choice == 4:
                    remove_from_cart(user)
                elif choice == 5:
                    checkout(user)
                elif choice == 6:
                    break

    elif role == "admin":
        admin_user = login_admin()
        if admin_user:
            while True:
                print("\n1. Add Product\n2. Update Product\n3. Delete Product\n4. View Catalog\n5. Exit")
                choice = int(input("Enter choice: "))

                if choice == 1:
                    admin_add_product()
                elif choice == 2:
                    admin_update_product()
                elif choice == 3:
                    admin_delete_product()
                elif choice == 4:
                    view_catalog()
                elif choice == 5:
                    break

main()